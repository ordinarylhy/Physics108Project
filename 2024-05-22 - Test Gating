############################################################################
### 2024-05-22 - Test Sweep for Gating
############################################################################

'''
(*) In this script, we set up a test loop for our gating measurements. We 
find capacitance by sweeping voltage and collecting current using a Keithley 236. 
(*) Need to do:
1. add voltage params
2. add wait times
3. measurement for current 
4. keithley.write('OUTP OFF') - do we need this? 
'''



### IMPORT RELEVANT PACKAGES

import numpy as np 
import time
import pyvisa as visa



### INIT KEITHLEY 236 

keith = rm.list_resources()[0]
keithley = rm.open_resource(keith)
keithley.write('D0X') # return to default display
keithley.write('F0,0X') # 0 voltage, 0 DC



### COLLECT DATA 

# DEFINE SWEEP PARAMETERS
wait_time = ... # !
Vmin = ... # !
Vmax = ... # !
numV = ... # !
Vs = np.linspace(Vmin, Vmax, numV)

# DEFINE SWEEP 
def voltage_sweep(Vmin, Vmax, numV, wait_time):
    voltages = np.array(Vmin, Vmax, numV)
    currents = []
    times = []
    for v in voltages:
        keithley.write('B' +str(0.02) + ',0,0X') # set voltage
        start_time = time.time()
        time.sleep(wait_time)  # wait for the system to stabilize
        current = ... # !
        v_measured = keithley.read('G1,0,2X') # record current voltage 
        end_time = time.time()
        currents.append(current)
        voltages_measured.append(v_measured)
        times.append((start_time + end_time) / 2)  
        keithley.write('OUTP OFF') # ! need this? 
    return voltages, np.array(voltages_measured), np.array(currents), np.array(times)

# DO SWEEP AND GET C 
voltages, voltages_measured, currents, times = voltage_sweep(Vmin, Vmax, numV, wait_time)
dv = np.diff(voltages)
dt = np.diff(times)
dv_dt = dv / dt
di = np.diff(currents)
capacitances = di / dv_dt

# SAVE DATA 
np.save('voltages.npy', voltages)
np.save('voltages_measured.npy', voltages_measured)
np.save('currents.npy', currents)
np.save('times.npy', times)
np.save('capacitances.npy', capacitances)
